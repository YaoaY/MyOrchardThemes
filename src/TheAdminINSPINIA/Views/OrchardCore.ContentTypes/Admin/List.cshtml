@model OrchardCore.ContentTypes.ViewModels.ListContentTypesViewModel

<div class="row wrapper border-bottom white-bg page-heading">
    <div class="col-lg-10">
        @await DisplayAsync(await New.BreadCrumb(Name: "Content Types", Paths: new string[] { "Content Definition" }))
    </div>
</div>

<div class="wrapper wrapper-content animated fadeInRight">
    <div class="row">
        <div class="col-lg-12">
            <div class="ibox float-e-margins">
                <div class="ibox-content">
                    <div class="row">
                        <div class="col-sm-1">
                            <a asp-route-action="Create" id="btnCreate" class="btn btn-primary" role="button">@T["Create new type"]</a>
                        </div>
                        <div class="col-sm-1">
                            <form method="get" class="form-inline float-right">
                                <input id="search-box" type="text" class="form-control" placeholder="@T["Filter"]" autofocus="autofocus">
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <ul class="list-group">
            @foreach (var type in Model.Types)
            {
                <li class="list-group-item" data-filter-value="@type.DisplayName" data-type-name="@type.Name">
                    @Html.DisplayFor(m => type)
                </li>
            }
        </ul>
    </div>
</div>

<script at="Foot" type="text/javascript">
    //<![CDATA[
    $(function () {
        var searchBox = $('#search-box');

        // On each keypress filter the list of types
        searchBox.keyup(function (e) {
            var search = $(this).val().toLowerCase();

            var elementsToFilter = $("[data-filter-value]");

            // On ESC, clear the search box and display all types
            if (e.keyCode == 27 || search == '') {
                searchBox.val('');
                elementsToFilter.toggle(true);
            } else {
                elementsToFilter.each(function () {
                    var text = $(this).data('filter-value').toLowerCase();
                    var found = text.indexOf(search) > -1;
                    $(this).toggle(found);
                });
            }

            // On Enter, redirect to the edit page if the type exists or the create page with a suggestion
            if (e.keyCode == 13) {
                var visibleRows = $("[data-type-name]:visible");
                if (visibleRows.length > 0) {
                    var editLink = $(".related a:last", visibleRows[0]);
                    location.href = editLink.attr("href");
                } else {
                    var primaryButton = $("#btnCreate");
                    location.href = primaryButton.attr("href") + "?suggestion=" + search;
                }
                return;
            }
        });
    });
    //]]>
</script>
