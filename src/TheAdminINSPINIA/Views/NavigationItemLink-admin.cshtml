@using System.Text.RegularExpressions
@{
    // Morphing the shape to keep Model untouched
    Model.Metadata.Alternates.Clear();
    Model.Metadata.Type = "NavigationItemText";
    Model.Metadata.Alternates.Add("NavigationItemText_Id__" + Model.Id);

    TagBuilder tag = Tag(Model, "a");
    tag.Attributes["href"] = Model.Href ?? "#";
    var text = (await DisplayAsync(Model)).ToString();
    if (Model.Level == 1)
    {
        var match = Regex.Match(text, "fa-(.*?)[\\\"]");
        string faClass = "gear";
        if (match.Success)
        {
            faClass = match.Groups[1].ToString();
            text = text.Replace(match.Groups[0].ToString(), "\"");
        }
        tag.InnerHtml.AppendHtml($"<i class=\"fa fa-{faClass}\"></i>");
        tag.InnerHtml.AppendHtml("<span class=\"nav-label\">");
        tag.InnerHtml.AppendHtml(text);
        tag.InnerHtml.AppendHtml("</span>");
    }
    else
    {
        tag.InnerHtml.AppendHtml(text);
    }

    if(Model.HasItems)
    {
        tag.InnerHtml.AppendHtml("<span class=\"fa arrow\"></span>");
    }

}
@tag